name: AutoBuild .NET

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ~/.nuget/packages
            ~/.cache/bepinex
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.x

      - name: install wget
        run: sudo apt install wget

      - name: download BepInEx
        run: wget https://builds.bepinex.dev/projects/bepinex_be/688/BepInEx-Unity.IL2CPP-win-x86-6.0.0-be.688%2B4901521.zip

      - name: unzip BepInEx
        run: unzip BepInEx-Unity.IL2CPP-win-x86-6.0.0-be.688+4901521.zip -d ./Release/

      - name: path
        run: sudo chmod -R 777 ./Release

      - name: download ExtraData
        run: wget https://raw.githubusercontent.com/mxyx-club/ExtraData/main/ExtraData.zip

      - name: unzip ExtraData
        run: unzip ExtraData.zip -d ./Release/

      - name: download Reactor
        run: wget https://github.com/NuclearPowered/Reactor/releases/download/2.2.0/Reactor.dll -P ./Release/BepInEx/plugins
        
      - name: Build
        run: dotnet build TheOtherRoles/TheOtherRoles.csproj --configuration Release --output ./Release/BepInEx/plugins

      - name: Upload TheOtherUsDll
        uses: actions/upload-artifact@v4.3.1
        with:
          name: TheOtherUs.dll
          path: ./Release/BepInEx/plugins/TheOtherUs.dll
          
      - name: Del Other Files
        run: rm -rf ./Release/BepInEx/plugins/TheOtherUs.deps.json ./Release/BepInEx/plugins/TheOtherUs.pdb ./Release/changelog.txt
          
      - name: Upload TheOtherUs
        uses: actions/upload-artifact@v4.3.1
        with:
          name: TheOtherUs
          path: ./Release/

  # 发布 Release 作业
  release:
    # 依赖 build 作业，只有 build 成功后才执行
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') # 只有当工作流由标签触发时才执行

    steps:
      # 下载构建工件
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: TheOtherUs

      # 提取版本号
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      # 克隆 CHANGELOG 文件（如果有的话）
      #- name: Clone Changes Log
      #  run: |
      #    wget https://raw.githubusercontent.com/your_repo/main/CHANGELOG.md -O CHANGELOG.md

      # 创建并发布 Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 密钥
          name: "TheOtherUs v${{ env.VERSION }}"  # 发布名称
          body_path: CHANGELOG.md  # 使用 CHANGELOG 作为发布描述
          files: ./Release/BepInEx/plugins/TheOtherUs.dll  # 发布的文件
          draft: false  # 直接发布（非草稿）
          prerelease: false  # 不是预发布版本
